package mainclass;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileSplit;

public class InvertIndex {
	//use filename_list to store the filename so that we can remember fileid only
	public static List<String> filename_list = new ArrayList<String>();
	
	public static class InvertIndexMapper extends Mapper<Object, Text, Text, IntWritable> {
		public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
			FileSplit filesplit = (FileSplit) context.getInputSplit();
			String filename = filesplit.getPath().getName();
			
			//add filename to filename_list and remember the filename_id
			int fileid = add_to_filename_list(filename);
			
			String temp = new String();
			String line = value.toString();
			StringTokenizer itr = new StringTokenizer(line, " ");
			while(itr.hasMoreTokens()){
				temp = itr.nextToken();
				
				//we can add stopwords here
				Text word = new Text(temp);
				context.write(word, new IntWritable(fileid));
			}
		}
		
		private int add_to_filename_list(String filename){
			return 0;
		}

	}
}
