package pagerank;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class PGIter {
	private static double d = 0.85;//not web page
	public static class PGIterMapper extends Mapper<LongWritable, Text, Text, Text> {

		public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
			String[] strs = value.toString().split("\t");
			String[] keys = strs[0].split("@");
			double pr = Double.parseDouble(keys[1]);
			String[] neighs = strs[1].split("#");
			for (String neigh : neighs) {
				String[] vals = neigh.split(",");
				String lp = String.format("%.2f",pr*Double.parseDouble(vals[1]));
				context.write(new Text(vals[0]), new Text("!" + lp));
			}
			context.write(new Text(keys[0]), new Text("?" + strs[1]));
		}
	}

	public static class PGIterReducer extends Reducer<Text, Text, Text, Text> {
		//key !prob1 or ?pr
		public void reduce(Text key, Iterable<Text> values, Context context) throws IOException, InterruptedException {
			String neigh=null;
			double pr=0;
			int n=0;
			for (Text val : values) {
				String str = val.toString();
				if (str.startsWith("!")) {
					n++;
					String[] box = str.substring(1).split("#");
					pr += Double.parseDouble(box[0]);
				} else if (str.startsWith("?")) {
					neigh = str.substring(1);
				}
			}
			pr= (1-d)/n+d*pr;
			context.write(new Text(key.toString() + "@" + pr), new Text(neigh));
		}

	}

	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		Job job = Job.getInstance(conf, "PGIter");
		job.setJarByClass(PGIter.class);
		job.setMapperClass(PGIterMapper.class);
		job.setReducerClass(PGIterReducer.class);
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(Text.class);
		// job.setNumReduceTasks(10);
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		job.waitForCompletion(true);
	}
}

